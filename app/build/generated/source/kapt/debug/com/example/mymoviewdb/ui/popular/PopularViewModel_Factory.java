// Generated by Dagger (https://dagger.dev).
package com.example.mymoviewdb.ui.popular;

import com.example.mymoviewdb.repository.PopularRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PopularViewModel_Factory implements Factory<PopularViewModel> {
  private final Provider<PopularRepository> mPopularRepositoryProvider;

  public PopularViewModel_Factory(Provider<PopularRepository> mPopularRepositoryProvider) {
    this.mPopularRepositoryProvider = mPopularRepositoryProvider;
  }

  @Override
  public PopularViewModel get() {
    return newInstance(mPopularRepositoryProvider.get());
  }

  public static PopularViewModel_Factory create(
      Provider<PopularRepository> mPopularRepositoryProvider) {
    return new PopularViewModel_Factory(mPopularRepositoryProvider);
  }

  public static PopularViewModel newInstance(PopularRepository mPopularRepository) {
    return new PopularViewModel(mPopularRepository);
  }
}
