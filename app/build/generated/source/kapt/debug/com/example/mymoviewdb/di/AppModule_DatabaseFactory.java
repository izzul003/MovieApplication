// Generated by Dagger (https://dagger.dev).
package com.example.mymoviewdb.di;

import android.content.Context;
import com.example.mymoviewdb.room.MyMoviesRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_DatabaseFactory implements Factory<MyMoviesRoomDatabase> {
  private final Provider<Context> appProvider;

  public AppModule_DatabaseFactory(Provider<Context> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public MyMoviesRoomDatabase get() {
    return database(appProvider.get());
  }

  public static AppModule_DatabaseFactory create(Provider<Context> appProvider) {
    return new AppModule_DatabaseFactory(appProvider);
  }

  public static MyMoviesRoomDatabase database(Context app) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.database(app));
  }
}
